---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${CI_PROJECT_NAME}
  labels:
    k8s-app: ${CI_PROJECT_NAME}
    app-group: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: ${CI_PROJECT_NAME}
      app-group: frontend
  template:
    metadata:
      name: ${CI_PROJECT_NAME}
      labels:
        k8s-app: ${CI_PROJECT_NAME}
        app-group: frontend
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: ${CI_PROJECT_NAME}
          image: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_SHORT_SHA}:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: VUE_APP_ROUTER_MODE
              value: "${VUE_APP_ROUTER_MODE}"
            - name: VUE_APP_PROXY_URI
              value: "${VUE_APP_PROXY_URI}"
            - name: DEBUGGING
              value: "${DEBUGGING}"
            - name: MODE
              value: "${MODE}"
            - name: NODE_ENV
              value: "${NODE_ENV}"
          ports:
            - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: ${CI_PROJECT_NAME}
  labels:
    k8s-app: ${CI_PROJECT_NAME}
    app-group: frontend
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    k8s-app: ${CI_PROJECT_NAME}
    app-group: frontend
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ${CI_PROJECT_NAME}
spec:
  secretName: ${CI_ENVIRONMENT_URL}-tls
  dnsNames:
    - ${CI_ENVIRONMENT_URL}
  duration: 168h
  renewBefore: 24h
  issuerRef:
    group: cert-manager.k8s.cloudflare.com
    kind: OriginIssuer
    name: prod-issuer
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: ${CI_PROJECT_NAME}
  labels:
    k8s-app: ${CI_PROJECT_NAME}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/issuer: prod-issuer
    cert-manager.io/issuer-kind: OriginIssuer
    cert-manager.io/issuer-group: cert-manager.k8s.cloudflare.com
spec:
  rules:
    - host: ${CI_ENVIRONMENT_URL}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: $CI_PROJECT_NAME
                port: 
                  number: 80
  tls:
    - hosts:
        - ${CI_ENVIRONMENT_URL}
      secretName: ${CI_ENVIRONMENT_URL}-tls
---
